{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/TODOLIST/src/App.js\";\nimport React, { Component } from 'react';\nimport Note from './components/note.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {}\n    };\n\n    this.state = {\n      noteText: \"\",\n      notes: []\n    };\n  }\n\n  deleteNote(index) {}\n\n  render() {\n    let notes = this.state.notes.map((val, key) => {\n      return React.createElement(Note, {\n        key: key,\n        text: val,\n        deleteMethod: () => this.deleteNote(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" ToDo App \"), React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" + \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: input => {\n        this.textInput = input;\n      },\n      className: \"textInput\",\n      value: this.state.noteText,\n      onChange: noteText => this.updateNoteText(noteText),\n      onKeyPress: this.handleKeyPress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/react/TODOLIST/src/App.js"],"names":["React","Component","Note","App","constructor","props","handleKeyPress","event","key","state","noteText","notes","deleteNote","index","render","map","val","input","textInput","updateNoteText","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,cAVmB,GAUDC,KAAD,IAAW;AAC1B,UAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAA0B,CAEzB;AAGF,KAhBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAG;AAFG,KAAb;AAKD;;AAUDC,EAAAA,UAAU,CAACC,KAAD,EAAO,CAAE;;AAGnBC,EAAAA,MAAM,GAAG;AAEP,QAAIH,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAX,CAAiBI,GAAjB,CAAqB,CAACC,GAAD,EAAKR,GAAL,KAAa;AAC5C,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAIA,GAAb;AAAkB,QAAA,IAAI,EAAGQ,GAAzB;AAA8B,QAAA,YAAY,EAAI,MAAI,KAAKJ,UAAL,CAAgBJ,GAAhB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFW,CAAZ;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAME;AACE,MAAA,IAAI,EAAC,MADP;AAGE,MAAA,GAAG,EAAIS,KAAD,IAAW;AAAE,aAAKC,SAAL,GAAiBD,KAAjB;AAAwB,OAH7C;AAKE,MAAA,SAAS,EAAC,WALZ;AAOE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAPpB;AASE,MAAA,QAAQ,EAAEA,QAAQ,IAAI,KAAKS,cAAL,CAAoBT,QAApB,CATxB;AAWE,MAAA,UAAU,EAAE,KAAKJ,cAAL,CAAoBc,IAApB,CAAyB,IAAzB,CAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAyBD;;AApDyB;;AAuD5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Note from './components/note.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      noteText: \"\",\n      notes : []\n    }\n\n  }\n\n  handleKeyPress = (event) => {\n    if(event.key === 'Enter' ){\n\n    }\n\n\n  }\n\n  deleteNote(index){}\n\n\n  render() {\n\n    let notes = this.state.notes.map((val,key) => {\n      return <Note key = {key} text ={val} deleteMethod = {()=>this.deleteNote(key)}></Note>;\n    })\n    return (\n      <div className=\"container\" >\n\n        <div className=\"header\" > ToDo App </div>\n\n        <div className=\"btn\" > + </div>\n\n        <input\n          type=\"text\"\n\n          ref={((input) => { this.textInput = input })}\n\n          className=\"textInput\"\n\n          value={this.state.noteText}\n\n          onChange={noteText => this.updateNoteText(noteText)}\n\n          onKeyPress={this.handleKeyPress.bind(this)}\n        >\n        </input>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}