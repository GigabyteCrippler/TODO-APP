{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/react-tutorial/src/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state here\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unigue id\n    const newItem = {\n      id: 1 + Math.random(),\n      // when is comma important ?\n      value: this.state.newItem.slice() // when : and when = ;\n      // copy current list of items\n\n    };\n    const list = [...this.state.list]; // add new item to list\n\n    list.push(newItem); //update state with new list and reset newitem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    }); // when is ; necessary ?\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"add an item\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"type item in here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"ADD ITEM\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/react/react-tutorial/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","render","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG,EADC;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKD;;AAGDC,EAAAA,WAAW,CAACC,GAAD,EAAKC,KAAL,EAAW;AACpB;AACA,SAAKC,QAAL,CAAe;AACb,OAACF,GAAD,GAAQC;AADK,KAAf;AAGD;;AAEDE,EAAAA,OAAO,GAAE;AACP;AACA,UAAMN,OAAO,GAAG;AACdO,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADM;AACS;AACvBL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBU,KAAnB,EAFO,CAEoB;AAIpC;;AANgB,KAAhB;AAOA,UAAMT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CATO,CAWP;;AACAA,IAAAA,IAAI,CAACU,IAAL,CAAUX,OAAV,EAZO,CAcP;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAE;AAFG,KAAd,EAfO,CAkBH;AAIL;;AAEDY,EAAAA,MAAM,GAAE;AACN,WAAS;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AACE,MAAA,IAAI,EAAG,MADT;AAEE,MAAA,WAAW,EAAG,mBAFhB;AAGE,MAAA,KAAK,EAAI,KAAKb,KAAL,CAAWC,OAHtB;AAIE,MAAA,QAAQ,EAAGa,CAAC,IAAI,KAAKX,WAAL,CAAiB,SAAjB,EAA4BW,CAAC,CAACC,MAAF,CAASV,KAArC,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EASA;AACA,MAAA,OAAO,EAAI,MAAK,KAAKE,OAAL,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,CADC,CAAT;AAkBD;;AA/DwB;;AAkE3B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n\n\n    this.state = {\n      newItem : \"\" ,\n      list: []\n    }\n\n  }\n\n\n  updateInput(key,value){\n    // update react state here\n    this.setState ({\n      [key] : value\n    })\n  }\n\n  addItem(){\n    //create item with unigue id\n    const newItem = {\n      id: 1 + Math.random(), // when is comma important ?\n      value: this.state.newItem.slice() // when : and when = ;\n    }\n\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newitem input\n    this.setState({\n      list,\n      newItem: \"\"\n    }); // when is ; necessary ?\n\n\n\n  }\n\n  render(){\n    return ( <div className = \"App\" >\n            <div>\n            add an item\n            <br/>\n            <input\n              type = \"text\"\n              placeholder = \"type item in here\"\n              value = {this.state.newItem}\n              onChange ={e => this.updateInput(\"newItem\", e.target.value)}\n            />\n            <button\n            onClick = {()=> this.addItem()}\n            >\n            ADD ITEM\n            </button>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}